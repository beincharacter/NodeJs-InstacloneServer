const express = require("express");
const bodyparser = require("body-parser");
const mongoose = require("mongoose");
const Post = require("../models/postSchema");
// const multer = require("multer");
const cloudinary = require("../cloudnary/cloudnary");
// const upload = multer({ storage });

// const uri = process.env.MONGODB_URI;
const uri = "mongodb://localhost/postsdb";

var multipart = require('connect-multiparty');
var multipartyMiddleware = multipart();

mongoose.connect(uri, (err)=>{
    if(!err){
      console.log('DB is connected')
    }else{
      console.log(err);
    }
  });





const router = express.Router();

router.use(bodyparser.json());
router.use(bodyparser.urlencoded({ extended: false }))



router.get("/posts", async (req, res) => {
    try{
        const posts = await Post.find();
        res.status(200).json(posts);
    } catch(e) {
        res.status(400).send("Request Failed");
    }
});

router.post("/posts", multipartyMiddleware, async (req, res) => {
    try {

        async function uploadImage(imagePath){
          const options = {
            use_filename: true,
            unique_filename: false,
            overwrite: true,
            resource_type: 'image'
          };

          try {
            const result = await cloudinary.uploader.upload(imagePath, options);
            console.log(result);
            return result.secure_url;
          } catch (error) {
            console.error(error);
          }
        };

        const imageData = await uploadImage(req.files.image)


        let date = new Date;
        let finalDate = date + "";
        let today = finalDate.split(" ").splice(1, 3).join(" ");

        const { author, description, location} = req.body;
    
        const user = await Post.create({
          author,
          description,
          location,
          likes: 35,
          date: today,
          image: imageData
        });
        res.send(user);
      } catch(e) {
        res.status(400).json({
          message: e.message
        })
    }
});


module.exports = router;

